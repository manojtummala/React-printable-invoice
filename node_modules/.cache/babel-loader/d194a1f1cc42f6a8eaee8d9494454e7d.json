{"ast":null,"code":"var _jsxFileName = \"/home/manoj/Desktop/react-invoice/src/components/reports/InvoiceTableBlankSpace.js\";\nimport React, { Fragment } from 'react';\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst borderColor = '#90e5fc';\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    borderBottomColor: '#bff0fd',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 24,\n    fontStyle: 'bold',\n    color: 'white'\n  },\n  description: {\n    width: '60%',\n    borderRightColor: borderColor,\n    borderRightWidth: 1\n  },\n  qty: {\n    width: '10%',\n    borderRightColor: borderColor,\n    borderRightWidth: 1\n  },\n  rate: {\n    width: '15%',\n    borderRightColor: borderColor,\n    borderRightWidth: 1\n  },\n  amount: {\n    width: '15%'\n  }\n});\n\nconst InvoiceTableBlankSpace = ({\n  rowsCount\n}) => {\n  const blankRows = Array(rowsCount).fill(0);\n  const rows = blankRows.map((x, i) => /*#__PURE__*/_jsxDEV(View, {\n    style: styles.row,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.description,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.qty,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.rate,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.amount,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, `BR${i}`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_c = InvoiceTableBlankSpace;\nexport default InvoiceTableBlankSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceTableBlankSpace\");","map":{"version":3,"sources":["/home/manoj/Desktop/react-invoice/src/components/reports/InvoiceTableBlankSpace.js"],"names":["React","Fragment","Text","View","StyleSheet","borderColor","styles","create","row","flexDirection","borderBottomColor","borderBottomWidth","alignItems","height","fontStyle","color","description","width","borderRightColor","borderRightWidth","qty","rate","amount","InvoiceTableBlankSpace","rowsCount","blankRows","Array","fill","rows","map","x","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,UAApB,QAAsC,qBAAtC;;AAEA,MAAMC,WAAW,GAAG,SAApB;AACA,MAAMC,MAAM,GAAGF,UAAU,CAACG,MAAX,CAAkB;AAC7BC,EAAAA,GAAG,EAAE;AACDC,IAAAA,aAAa,EAAE,KADd;AAEDC,IAAAA,iBAAiB,EAAE,SAFlB;AAGDC,IAAAA,iBAAiB,EAAE,CAHlB;AAIDC,IAAAA,UAAU,EAAE,QAJX;AAKDC,IAAAA,MAAM,EAAE,EALP;AAMDC,IAAAA,SAAS,EAAE,MANV;AAODC,IAAAA,KAAK,EAAE;AAPN,GADwB;AAU7BC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,gBAAgB,EAAEb,WAFT;AAGTc,IAAAA,gBAAgB,EAAE;AAHT,GAVgB;AAe7BC,EAAAA,GAAG,EAAE;AACDH,IAAAA,KAAK,EAAE,KADN;AAEDC,IAAAA,gBAAgB,EAAEb,WAFjB;AAGDc,IAAAA,gBAAgB,EAAE;AAHjB,GAfwB;AAoB7BE,EAAAA,IAAI,EAAE;AACFJ,IAAAA,KAAK,EAAE,KADL;AAEFC,IAAAA,gBAAgB,EAAEb,WAFhB;AAGFc,IAAAA,gBAAgB,EAAE;AAHhB,GApBuB;AAyB7BG,EAAAA,MAAM,EAAE;AACJL,IAAAA,KAAK,EAAE;AADH;AAzBqB,CAAlB,CAAf;;AA+BA,MAAMM,sBAAsB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAC5C,QAAMC,SAAS,GAAGC,KAAK,CAACF,SAAD,CAAL,CAAiBG,IAAjB,CAAsB,CAAtB,CAAlB;AACA,QAAMC,IAAI,GAAGH,SAAS,CAACI,GAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,kBACxB,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACE,GAApB;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACU,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACc,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEd,MAAM,CAACe,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACgB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAA+B,KAAIS,CAAE,EAArC;AAAA;AAAA;AAAA;AAAA,UADS,CAAb;AAQA,sBAAQ,QAAC,QAAD;AAAA,cAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAXD;;KAAML,sB;AAaN,eAAeA,sBAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst borderColor = '#90e5fc'\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        borderBottomColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 24,\n        fontStyle: 'bold',\n        color: 'white'\n    },\n    description: {\n        width: '60%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    qty: {\n        width: '10%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    rate: {\n        width: '15%',\n        borderRightColor: borderColor,\n        borderRightWidth: 1,\n    },\n    amount: {\n        width: '15%',\n    },\n   \n  });\n\nconst InvoiceTableBlankSpace = ({rowsCount}) => {\n    const blankRows = Array(rowsCount).fill(0)\n    const rows = blankRows.map( (x, i) => \n        <View style={styles.row} key={`BR${i}`}>\n            <Text style={styles.description}>-</Text>\n            <Text style={styles.qty}>-</Text>\n            <Text style={styles.rate}>-</Text>\n            <Text style={styles.amount}>-</Text>\n        </View>\n    )\n    return (<Fragment>{rows}</Fragment> )\n};\n  \nexport default InvoiceTableBlankSpace"]},"metadata":{},"sourceType":"module"}